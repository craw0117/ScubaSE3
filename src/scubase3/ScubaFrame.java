package scubase3;

import java.io.File;
import java.io.InputStream;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 * View class, holds a reference to the controller object and is responsible for
 * managing the user interface and all user input. When user input is provided,
 * this class will update the data in the model by calling methods in the
 * controller class.
 *
 * @author liu1028, eden0021, mitc0341, craw0117, kris0068
 */
public class ScubaFrame extends javax.swing.JFrame {

    /**
     * A reference to the controller object, it is private to ensure that MVC is
     * strictly adhered to.
     */
    private final ScubaController controller;

    /**
     * Creates a new ScubaFrame and initializes all of the form components.
     *
     * @param controller the ScubaController
     */
    public ScubaFrame(ScubaController controller) {
        this.controller = controller;
        initComponents();
    }

    /**
     * Updates dynamic state dependant components. Must be called after every
     * state change.
     */
    public void update() {
        sInputPanel.update();
        sOutputPanel.update();
        sTablePanel.update();
        sTableInputPanel.update();
        
        sTabPane.setSelectedIndex(controller.getTabView());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scubaTables1 = new scubase3.ScubaTables();
        sTabPane = new javax.swing.JTabbedPane();
        sCalculator = new javax.swing.JPanel();
        sSplitPane = new javax.swing.JSplitPane();
        sOutputPanel = new scubase3.panels.ScubaOutputPanel();
        sInputPanel = new scubase3.panels.ScubaInputPanel();
        sTables = new javax.swing.JPanel();
        tVerticalSplitPane = new javax.swing.JSplitPane();
        sTablePanel = new scubase3.panels.ScubaTablePanel();
        sTableInputPanel = new scubase3.panels.ScubaTableInputPanel();
        sMenuBar = new javax.swing.JMenuBar();
        sFileMenu = new javax.swing.JMenu();
        sFileSeparator2 = new javax.swing.JPopupMenu.Separator();
        sExitButton = new javax.swing.JMenuItem();
        sCalcMenu = new javax.swing.JMenu();
        sEADButton = new javax.swing.JMenuItem();
        sMODButton = new javax.swing.JMenuItem();
        sBMButton = new javax.swing.JMenuItem();
        sPPButton = new javax.swing.JMenuItem();
        sSMODButton = new javax.swing.JMenuItem();
        sTablesMenu = new javax.swing.JMenu();
        sEADTableButton = new javax.swing.JMenuItem();
        sPPTableButton = new javax.swing.JMenuItem();
        sHelpMenu = new javax.swing.JMenu();
        sHelpDocsButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dive Calculator Version 0.2 PRERELEASE");
        setMinimumSize(new java.awt.Dimension(730, 597));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        sTabPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sTabPaneStateChanged(evt);
            }
        });

        sCalculator.setLayout(new java.awt.GridLayout(1, 0));

        sSplitPane.setDividerSize(3);

        sOutputPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sSplitPane.setRightComponent(sOutputPanel);

        sInputPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sSplitPane.setLeftComponent(sInputPanel);

        sCalculator.add(sSplitPane);

        sTabPane.addTab("Calculator", sCalculator);

        sTables.setMinimumSize(new java.awt.Dimension(575, 400));
        sTables.setPreferredSize(new java.awt.Dimension(575, 400));
        sTables.setRequestFocusEnabled(false);
        sTables.setLayout(new java.awt.GridLayout(1, 0));

        tVerticalSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        tVerticalSplitPane.setBottomComponent(sTablePanel);

        sTableInputPanel.setMaximumSize(new java.awt.Dimension(573, 150));
        sTableInputPanel.setMinimumSize(new java.awt.Dimension(573, 150));
        sTableInputPanel.setPreferredSize(new java.awt.Dimension(573, 150));
        tVerticalSplitPane.setTopComponent(sTableInputPanel);

        sTables.add(tVerticalSplitPane);

        sTabPane.addTab("Tables", sTables);

        getContentPane().add(sTabPane);

        sFileMenu.setText("File");
        sFileMenu.add(sFileSeparator2);

        sExitButton.setText("Exit");
        sExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sExitButtonActionPerformed(evt);
            }
        });
        sFileMenu.add(sExitButton);

        sMenuBar.add(sFileMenu);

        sCalcMenu.setText("Calculate");

        sEADButton.setText("Equivalent Air Depth (EAD)");
        sEADButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sEADButtonActionPerformed(evt);
            }
        });
        sCalcMenu.add(sEADButton);

        sMODButton.setText("Maximum Operating Depth (MOD)");
        sMODButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sMODButtonActionPerformed(evt);
            }
        });
        sCalcMenu.add(sMODButton);

        sBMButton.setText("Best Mix (BM)");
        sBMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sBMButtonActionPerformed(evt);
            }
        });
        sCalcMenu.add(sBMButton);

        sPPButton.setText("Partial Pressure (PP)");
        sPPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sPPButtonActionPerformed(evt);
            }
        });
        sCalcMenu.add(sPPButton);

        sSMODButton.setText("Standard MOD (SMOD)");
        sSMODButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sSMODButtonActionPerformed(evt);
            }
        });
        sCalcMenu.add(sSMODButton);

        sMenuBar.add(sCalcMenu);

        sTablesMenu.setText("Tables");

        sEADTableButton.setText("Equivalent Air Depth (EAD)");
        sEADTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sEADTableButtonActionPerformed(evt);
            }
        });
        sTablesMenu.add(sEADTableButton);

        sPPTableButton.setText("Partial Pressure (PP)");
        sPPTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sPPTableButtonActionPerformed(evt);
            }
        });
        sTablesMenu.add(sPPTableButton);

        sMenuBar.add(sTablesMenu);

        sHelpMenu.setText("Help");

        sHelpDocsButton.setText("User Manual");
        sHelpDocsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sHelpDocsButtonActionPerformed(evt);
            }
        });
        sHelpMenu.add(sHelpDocsButton);

        sMenuBar.add(sHelpMenu);

        setJMenuBar(sMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Called when the exit button is selected from the File menu
     *
     * @param evt
     */
    private void sExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_sExitButtonActionPerformed

    /**
     * Called when the EAD button is selected from the Tables menu
     *
     * @param evt
     */
    private void sEADTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sEADTableButtonActionPerformed
        controller.setTableType(Const.TYPE_EAD);
    }//GEN-LAST:event_sEADTableButtonActionPerformed

    /**
     * Called when the PP button is selected from the Tables menu
     *
     * @param evt
     */
    private void sPPTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sPPTableButtonActionPerformed
        controller.setTableType(Const.TYPE_PP);
    }//GEN-LAST:event_sPPTableButtonActionPerformed

    /**
     * Called when the EAD button is selected from the Calculations menu
     *
     * @param evt
     */
    private void sEADButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sEADButtonActionPerformed
        controller.setCalculationType(Const.TYPE_EAD);
    }//GEN-LAST:event_sEADButtonActionPerformed

    /**
     * Called when the MOD button is selected from the Calculations menu
     *
     * @param evt
     */
    private void sMODButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sMODButtonActionPerformed
        controller.setCalculationType(Const.TYPE_MOD);
    }//GEN-LAST:event_sMODButtonActionPerformed

    /**
     * Called when the BM button is selected from the Calculations menu
     *
     * @param evt
     */
    private void sBMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sBMButtonActionPerformed
        controller.setCalculationType(Const.TYPE_BM);
    }//GEN-LAST:event_sBMButtonActionPerformed

    /**
     * Called when the PP button is selected from the Calculations menu
     *
     * @param evt
     */
    private void sPPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sPPButtonActionPerformed
        controller.setCalculationType(Const.TYPE_PP);
    }//GEN-LAST:event_sPPButtonActionPerformed

    /**
     * Called when the SMOD button is selected from the Calculations menu
     *
     * @param evt
     */
    private void sSMODButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sSMODButtonActionPerformed
        controller.setCalculationType(Const.TYPE_SMOD);
    }//GEN-LAST:event_sSMODButtonActionPerformed

    /**
     * Called when the User Documentation button is selected from the Help menu
     *
     * @param evt
     */
    private void sHelpDocsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sHelpDocsButtonActionPerformed
        JFrame frame = new JFrame();
        JPanel panel = new JPanel();
        String textloc = "test.html";
        try {
            //Read for package and make a temp file on the file system
            InputStream in = getClass().getResourceAsStream(textloc);
            File temp = File.createTempFile("test", ".html");
            Files.copy(in, temp.toPath(), StandardCopyOption.REPLACE_EXISTING);

            //load from temp file
            URL url = temp.toURI().toURL();
            JEditorPane pane = new JEditorPane(url);
            frame.add(new JScrollPane(pane));
            frame.pack();
            frame.setSize(450, 350);
            frame.setLocationByPlatform(true);
            frame.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sHelpDocsButtonActionPerformed

    private void sTabPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sTabPaneStateChanged
        controller.setTabView(((javax.swing.JTabbedPane) evt.getSource()).getSelectedIndex());
    }//GEN-LAST:event_sTabPaneStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem sBMButton;
    private javax.swing.JMenu sCalcMenu;
    private javax.swing.JPanel sCalculator;
    private javax.swing.JMenuItem sEADButton;
    private javax.swing.JMenuItem sEADTableButton;
    private javax.swing.JMenuItem sExitButton;
    private javax.swing.JMenu sFileMenu;
    private javax.swing.JPopupMenu.Separator sFileSeparator2;
    private javax.swing.JMenuItem sHelpDocsButton;
    private javax.swing.JMenu sHelpMenu;
    private scubase3.panels.ScubaInputPanel sInputPanel;
    private javax.swing.JMenuItem sMODButton;
    private javax.swing.JMenuBar sMenuBar;
    private scubase3.panels.ScubaOutputPanel sOutputPanel;
    private javax.swing.JMenuItem sPPButton;
    private javax.swing.JMenuItem sPPTableButton;
    private javax.swing.JMenuItem sSMODButton;
    private javax.swing.JSplitPane sSplitPane;
    private javax.swing.JTabbedPane sTabPane;
    private scubase3.panels.ScubaTableInputPanel sTableInputPanel;
    private scubase3.panels.ScubaTablePanel sTablePanel;
    private javax.swing.JPanel sTables;
    private javax.swing.JMenu sTablesMenu;
    private scubase3.ScubaTables scubaTables1;
    private javax.swing.JSplitPane tVerticalSplitPane;
    // End of variables declaration//GEN-END:variables
}
