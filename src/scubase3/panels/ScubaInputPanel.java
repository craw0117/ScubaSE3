package scubase3.panels;

import scubase3.Const;
import scubase3.ScubaController;
import scubase3.ScubaSE3;

/**
 * ScubaInputPanel is the upper-left panel in the user interface
 *
 * @author liu1028, eden0021, mitc0341, craw0117, kris0068
 */
public final class ScubaInputPanel extends javax.swing.JPanel {

    /**
     * Default constructor for ScubaInputPanel
     */
    public ScubaInputPanel() {
        initComponents();
    }

    /**
     * Gets the controller object using the static method in
     * <code>ScubaSE3</code>
     *
     * @return
     * @see ScubaSE3#getController()
     */
    public static ScubaController getController() {
        return ScubaSE3.getController();
    }

    /**
     * Updates dynamic components - must be called after state change.
     */
    public void update() {
        String calculationType = getController().getCalculationType();
        int inputFlags = getController().getInputFlags();

        //Update inputs using the currently stored values
        partialPressureSpinner.setValue(getController().getPartialPressure());
        oxygenFractionSpinner.setValue(getController().getOxygenFraction());
        depthSpinner.setValue(getController().getDepth());

        //Check flags to display each input
        partialPressurePanel.setVisible((inputFlags & Const.FLAG_O2_PRESSURE) == Const.FLAG_O2_PRESSURE);
        oxygenFractionPanel.setVisible((inputFlags & Const.FLAG_O2_FRACTION) == Const.FLAG_O2_FRACTION);
        depthPanel.setVisible((inputFlags & Const.FLAG_DEPTH) == Const.FLAG_DEPTH);

        //Update the buttons to make sure the right one is selected
        eadSelect.setSelected(calculationType.equals(Const.TYPE_EAD));
        bmSelect.setSelected(calculationType.equals(Const.TYPE_BM));
        modSelect.setSelected(calculationType.equals(Const.TYPE_MOD));
        ppSelect.setSelected(calculationType.equals(Const.TYPE_PP));
        smodSelect.setSelected(calculationType.equals(Const.TYPE_SMOD));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        inputSelectGroup = new javax.swing.ButtonGroup();
        jMenu1 = new javax.swing.JMenu();
        inputToolBar = new javax.swing.JToolBar();
        eadSelect = new javax.swing.JToggleButton();
        modSelect = new javax.swing.JToggleButton();
        bmSelect = new javax.swing.JToggleButton();
        ppSelect = new javax.swing.JToggleButton();
        smodSelect = new javax.swing.JToggleButton();
        partialPressurePanel = new javax.swing.JPanel();
        partialPressureLabel = new javax.swing.JLabel();
        partialPressureSpinner = new javax.swing.JSpinner();
        partialPressureHelpLabel = new javax.swing.JLabel();
        oxygenFractionPanel = new javax.swing.JPanel();
        oxygenFractionLabel = new javax.swing.JLabel();
        oxygenFractionSpinner = new javax.swing.JSpinner();
        oxygenFractionHelpLabel = new javax.swing.JLabel();
        depthPanel = new javax.swing.JPanel();
        depthLabel = new javax.swing.JLabel();
        depthSpinner = new javax.swing.JSpinner();
        depthHelpLabel = new javax.swing.JLabel();
        inputCalculate = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 15));

        jMenu1.setText("jMenu1");

        setMinimumSize(new java.awt.Dimension(320, 312));
        setPreferredSize(new java.awt.Dimension(320, 312));
        setLayout(new java.awt.GridBagLayout());

        inputToolBar.setBorder(null);
        inputToolBar.setFloatable(false);
        inputToolBar.setRollover(true);

        inputSelectGroup.add(eadSelect);
        eadSelect.setSelected(true);
        eadSelect.setText("EAD");
        eadSelect.setToolTipText("Equivalent Air Depth");
        eadSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eadSelect.setFocusable(false);
        eadSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eadSelect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eadSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eadSelectActionPerformed(evt);
            }
        });
        inputToolBar.add(eadSelect);

        inputSelectGroup.add(modSelect);
        modSelect.setText("MOD");
        modSelect.setToolTipText("Maximum Operating Depth");
        modSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modSelect.setFocusable(false);
        modSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        modSelect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modSelectActionPerformed(evt);
            }
        });
        inputToolBar.add(modSelect);

        inputSelectGroup.add(bmSelect);
        bmSelect.setText("BM");
        bmSelect.setToolTipText("Fraction of Oxygen");
        bmSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bmSelect.setFocusable(false);
        bmSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bmSelect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bmSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmSelectActionPerformed(evt);
            }
        });
        inputToolBar.add(bmSelect);

        inputSelectGroup.add(ppSelect);
        ppSelect.setText("PP");
        ppSelect.setToolTipText("Partial Pressure of oxygen (PPO2)");
        ppSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ppSelect.setFocusable(false);
        ppSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ppSelect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ppSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppSelectActionPerformed(evt);
            }
        });
        inputToolBar.add(ppSelect);

        inputSelectGroup.add(smodSelect);
        smodSelect.setText("SMOD");
        smodSelect.setToolTipText("Standard Max Operating Depth");
        smodSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        smodSelect.setFocusable(false);
        smodSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        smodSelect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        smodSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smodSelectActionPerformed(evt);
            }
        });
        inputToolBar.add(smodSelect);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        add(inputToolBar, gridBagConstraints);

        partialPressurePanel.setAlignmentX(0.0F);
        partialPressurePanel.setAlignmentY(0.0F);
        partialPressurePanel.setLayout(new javax.swing.BoxLayout(partialPressurePanel, javax.swing.BoxLayout.Y_AXIS));

        partialPressureLabel.setText("Partial Pressure (Pg)");
        partialPressurePanel.add(partialPressureLabel);

        partialPressureSpinner.setModel(new javax.swing.SpinnerNumberModel(1.1d, 1.1d, 1.6d, 0.01d));
        partialPressureSpinner.setAlignmentX(0.0F);
        partialPressureSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(partialPressureSpinner, "0.0"));
        partialPressureSpinner.setMaximumSize(new java.awt.Dimension(250, 24));
        partialPressureSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        partialPressureSpinner.setPreferredSize(new java.awt.Dimension(250, 24));
        partialPressureSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                partialPressureSpinnerStateChanged(evt);
            }
        });
        partialPressurePanel.add(partialPressureSpinner);
        javax.swing.JSpinner.NumberEditor pEditor = (javax.swing.JSpinner.NumberEditor)partialPressureSpinner.getEditor();
        java.text.DecimalFormat pFormat = pEditor.getFormat();
        pFormat.setMinimumFractionDigits(2);
        pFormat.setMaximumFractionDigits(2);

        partialPressureHelpLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        partialPressureHelpLabel.setText("1.1 - 1.6 bar");
        partialPressurePanel.add(partialPressureHelpLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(partialPressurePanel, gridBagConstraints);

        oxygenFractionPanel.setAlignmentX(0.0F);
        oxygenFractionPanel.setAlignmentY(0.0F);
        oxygenFractionPanel.setLayout(new javax.swing.BoxLayout(oxygenFractionPanel, javax.swing.BoxLayout.Y_AXIS));

        oxygenFractionLabel.setText("Oxygen Percent (Fg)");
        oxygenFractionPanel.add(oxygenFractionLabel);

        oxygenFractionSpinner.setModel(new javax.swing.SpinnerNumberModel(0.32d, 0.22d, 0.5d, 0.01d));
        oxygenFractionSpinner.setAlignmentX(0.0F);
        oxygenFractionSpinner.setMaximumSize(new java.awt.Dimension(250, 24));
        oxygenFractionSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        oxygenFractionSpinner.setPreferredSize(new java.awt.Dimension(250, 24));
        oxygenFractionSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                oxygenFractionSpinnerStateChanged(evt);
            }
        });
        oxygenFractionPanel.add(oxygenFractionSpinner);
        javax.swing.JSpinner.NumberEditor oEditor = (javax.swing.JSpinner.NumberEditor)oxygenFractionSpinner.getEditor();
        java.text.DecimalFormat oFormat = oEditor.getFormat();
        oFormat.setMinimumFractionDigits(2);
        oFormat.setMaximumFractionDigits(2);

        oxygenFractionHelpLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        oxygenFractionHelpLabel.setText("e.g. 0.32 = 32%");
        oxygenFractionPanel.add(oxygenFractionHelpLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(oxygenFractionPanel, gridBagConstraints);

        depthPanel.setAlignmentX(0.0F);
        depthPanel.setAlignmentY(0.0F);
        depthPanel.setLayout(new javax.swing.BoxLayout(depthPanel, javax.swing.BoxLayout.Y_AXIS));

        depthLabel.setText("Depth (m)");
        depthPanel.add(depthLabel);

        depthSpinner.setModel(new javax.swing.SpinnerNumberModel(33.3d, 0.0d, 100.0d, 0.1d));
        depthSpinner.setAlignmentX(0.0F);
        depthSpinner.setMaximumSize(new java.awt.Dimension(250, 24));
        depthSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        depthSpinner.setPreferredSize(new java.awt.Dimension(250, 24));
        depthSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                depthSpinnerStateChanged(evt);
            }
        });
        depthPanel.add(depthSpinner);
        javax.swing.JSpinner.NumberEditor dEditor = (javax.swing.JSpinner.NumberEditor)depthSpinner.getEditor();
        java.text.DecimalFormat dFormat = dEditor.getFormat();
        dFormat.setMinimumFractionDigits(1);
        dFormat.setMaximumFractionDigits(1);

        depthHelpLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        depthHelpLabel.setText("e.g. 33m");
        depthPanel.add(depthHelpLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(depthPanel, gridBagConstraints);

        inputCalculate.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        inputCalculate.setText("Calculate");
        inputCalculate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        inputCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCalculateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(inputCalculate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(filler2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Called when the calculation button is selected
     *
     * @param evt
     */
    private void inputCalculateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_inputCalculateActionPerformed
    {//GEN-HEADEREND:event_inputCalculateActionPerformed
        getController().setCalculationType(ScubaSE3.getController().getCalculationType());

    }//GEN-LAST:event_inputCalculateActionPerformed

    /**
     * Called when the PP button is selected from the button group
     *
     * @param evt
     */
    private void ppSelectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ppSelectActionPerformed
    {//GEN-HEADEREND:event_ppSelectActionPerformed
        getController().setCalculationType(Const.TYPE_PP);
    }//GEN-LAST:event_ppSelectActionPerformed

    /**
     * Called when the EAD button is selected from the button group
     *
     * @param evt
     */
    private void eadSelectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_eadSelectActionPerformed
    {//GEN-HEADEREND:event_eadSelectActionPerformed
        getController().setCalculationType(Const.TYPE_EAD);
    }//GEN-LAST:event_eadSelectActionPerformed

    /**
     * Called when the MOD button is selected from the button group
     *
     * @param evt
     */
    private void modSelectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_modSelectActionPerformed
    {//GEN-HEADEREND:event_modSelectActionPerformed
        getController().setCalculationType(Const.TYPE_MOD);
    }//GEN-LAST:event_modSelectActionPerformed

    /**
     * Called when the BM button is selected from the button group
     *
     * @param evt
     */
    private void bmSelectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bmSelectActionPerformed
    {//GEN-HEADEREND:event_bmSelectActionPerformed
        getController().setCalculationType(Const.TYPE_BM);
    }//GEN-LAST:event_bmSelectActionPerformed

    /**
     * Called when the SMOD button is selected from the button group
     *
     * @param evt
     */
    private void smodSelectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_smodSelectActionPerformed
    {//GEN-HEADEREND:event_smodSelectActionPerformed
        getController().setCalculationType(Const.TYPE_SMOD);
    }//GEN-LAST:event_smodSelectActionPerformed

    /**
     * Called whenever the partial pressure input field value is changed
     *
     * @param evt
     */
    private void partialPressureSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_partialPressureSpinnerStateChanged
    {//GEN-HEADEREND:event_partialPressureSpinnerStateChanged
        getController().setPartialPressure((double) ((javax.swing.JSpinner) evt.getSource()).getValue());
        getController().setCalculationType(getController().getCalculationType());
    }//GEN-LAST:event_partialPressureSpinnerStateChanged

    /**
     * Called whenever the oxygen fraction input field value is changed
     *
     * @param evt
     */
    private void oxygenFractionSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_oxygenFractionSpinnerStateChanged
    {//GEN-HEADEREND:event_oxygenFractionSpinnerStateChanged
        getController().setOxygenFraction((double) ((javax.swing.JSpinner) evt.getSource()).getValue());
        getController().setCalculationType(getController().getCalculationType());
    }//GEN-LAST:event_oxygenFractionSpinnerStateChanged

    /**
     * Called whenever the depth input field value is changed
     *
     * @param evt
     */
    private void depthSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_depthSpinnerStateChanged
    {//GEN-HEADEREND:event_depthSpinnerStateChanged
        getController().setDepth((double) ((javax.swing.JSpinner) evt.getSource()).getValue());
        getController().setCalculationType(getController().getCalculationType());
    }//GEN-LAST:event_depthSpinnerStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton bmSelect;
    private javax.swing.JLabel depthHelpLabel;
    private javax.swing.JLabel depthLabel;
    private javax.swing.JPanel depthPanel;
    private javax.swing.JSpinner depthSpinner;
    private javax.swing.JToggleButton eadSelect;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton inputCalculate;
    private javax.swing.ButtonGroup inputSelectGroup;
    private javax.swing.JToolBar inputToolBar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JToggleButton modSelect;
    private javax.swing.JLabel oxygenFractionHelpLabel;
    private javax.swing.JLabel oxygenFractionLabel;
    private javax.swing.JPanel oxygenFractionPanel;
    private javax.swing.JSpinner oxygenFractionSpinner;
    private javax.swing.JLabel partialPressureHelpLabel;
    private javax.swing.JLabel partialPressureLabel;
    private javax.swing.JPanel partialPressurePanel;
    private javax.swing.JSpinner partialPressureSpinner;
    private javax.swing.JToggleButton ppSelect;
    private javax.swing.JToggleButton smodSelect;
    // End of variables declaration//GEN-END:variables
}
